{"version":3,"sources":["../src/lib/GithubCorner.js"],"names":["githubCornerStyleId","githubCornerStyles","GithubCorner","document","getElementById","head","getElementsByTagName","style","createElement","type","id","styleSheet","cssText","appendChild","createTextNode","props","href","width","height","direction","octoColor","bannerColor","ariaLabel","mainStyle","position","top","fill","armStyle","pathBanner","pathArm","pathBody","left","WebkitTransformOrigin","transformOrigin","right","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;;;;;;;;;AAEA,IAAMA,sBAAsB,mCAA5B;AACA,IAAMC,qBAAqB,sCAA3B;;AAEA;;;;;;;;;;IASqBC,Y;;;;;;;;;;;wCAmBC;AAClB,UAAI,CAACC,SAASC,cAAT,CAAwBJ,mBAAxB,CAAL,EAAmD;AACjD,YAAMK,OAAOF,SAASE,IAAT,IAAiBF,SAASG,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAA9B;AACA,YAAMC,QAAQJ,SAASK,aAAT,CAAuB,OAAvB,CAAd;AACAD,cAAME,IAAN,GAAa,UAAb;AACAF,cAAMG,EAAN,GAAWV,mBAAX;AACA,YAAIO,MAAMI,UAAV,EAAsB;AACpBJ,gBAAMI,UAAN,CAAiBC,OAAjB,GAA2BX,kBAA3B;AACD,SAFD,MAEO;AACLM,gBAAMM,WAAN,CAAkBV,SAASW,cAAT,CAAwBb,kBAAxB,CAAlB;AACD;AACDI,aAAKQ,WAAL,CAAiBN,KAAjB;AACD;AACF;;;6BACQ;AAAA,mBASH,KAAKQ,KATF;AAAA,UAELC,IAFK,UAELA,IAFK;AAAA,UAGLC,KAHK,UAGLA,KAHK;AAAA,UAILC,MAJK,UAILA,MAJK;AAAA,UAKLC,SALK,UAKLA,SALK;AAAA,UAMLC,SANK,UAMLA,SANK;AAAA,UAOLC,WAPK,UAOLA,WAPK;AAAA,UAQLC,SARK,UAQLA,SARK;;AAUP,UAAMC,YAAY;AAChBC,kBAAU,UADM;AAEhBC,aAAK,CAFW;AAGhBC,cAAMN;AAHU,OAAlB;AAKA,UAAMO,WAAW,EAAjB;AACA,UAAIC,aAAa,EAAjB;AACA,UAAIC,UAAU,EAAd;AACA,UAAIC,WAAW,EAAf;AACA,UAAIX,cAAc,MAAlB,EAA0B;AACxBS,qBAAa,oCAAb;AACAC,kBACE,gFADF;AAEAC,mBACE,qNADF;AAEAP,kBAAUQ,IAAV,GAAiB,CAAjB;AACAJ,iBAASK,qBAAT,GAAiC,aAAjC;AACAL,iBAASM,eAAT,GAA2B,aAA3B;AACD,OATD,MASO;AACLL,qBAAa,kCAAb;AACAC,kBACE,iFADF;AAEAC,mBACE,kNADF;AAEAP,kBAAUW,KAAV,GAAkB,CAAlB;AACAP,iBAASK,qBAAT,GAAiC,aAAjC;AACAL,iBAASM,eAAT,GAA2B,aAA3B;AACD;AACD,aACE;AAAA;AAAA,UAAG,MAAMjB,IAAT,EAAe,WAAU,eAAzB,EAAyC,cAAYM,SAArD;AACE;AAAA;AAAA;AACE,mBAAOL,KADT;AAEE,oBAAQC,MAFV;AAGE,qBAAQ,aAHV;AAIE,mBAAOK;AAJT;AAME,kDAAM,WAAU,aAAhB,EAA8B,GAAGK,UAAjC,EAA6C,MAAMP,WAAnD,GANF;AAOE,kDAAM,WAAU,UAAhB,EAA2B,GAAGQ,OAA9B,EAAuC,OAAOF,QAA9C,GAPF;AAQE,kDAAM,WAAU,WAAhB,EAA4B,GAAGG,QAA/B;AARF;AADF,OADF;AAcD;;;;;;AArFkB5B,Y,CACZiC,Y,GAAe;AACpBnB,QAAM,GADc;AAEpBC,SAAO,EAFa;AAGpBC,UAAQ,EAHY;AAIpBC,aAAW,OAJS;AAKpBC,aAAW,MALS;AAMpBC,eAAa,SANO;AAOpBC,aAAW;AAPS,C;kBADHpB,Y","file":"GithubCorner.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport getGithubCornerStyles from './get-github-corner-styles.js';\n\nconst githubCornerStyleId = '____GITHUB_CORNER_SUPER_SECRET___';\nconst githubCornerStyles = getGithubCornerStyles();\n\n/**\n * A react component based off of:\n *   https://github.com/tholman/github-corners\n *\n * @class GithubCorner\n * @extends React.Component\n * @example\n * <GithubCorner href=\"http://skratchdot.com/\" />\n */\nexport default class GithubCorner extends Component {\n  static defaultProps = {\n    href: '/',\n    width: 80,\n    height: 80,\n    direction: 'right',\n    octoColor: '#fff',\n    bannerColor: '#151513',\n    ariaLabel: 'Open GitHub project'\n  };\n  static propTypes = {\n    href: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    direction: PropTypes.string,\n    octoColor: PropTypes.string,\n    bannerColor: PropTypes.string,\n    ariaLabel: PropTypes.string\n  };\n  componentDidMount() {\n    if (!document.getElementById(githubCornerStyleId)) {\n      const head = document.head || document.getElementsByTagName('head')[0];\n      const style = document.createElement('style');\n      style.type = 'text/css';\n      style.id = githubCornerStyleId;\n      if (style.styleSheet) {\n        style.styleSheet.cssText = githubCornerStyles;\n      } else {\n        style.appendChild(document.createTextNode(githubCornerStyles));\n      }\n      head.appendChild(style);\n    }\n  }\n  render() {\n    const {\n      href,\n      width,\n      height,\n      direction,\n      octoColor,\n      bannerColor,\n      ariaLabel\n    } = this.props;\n    const mainStyle = {\n      position: 'absolute',\n      top: 0,\n      fill: octoColor\n    };\n    const armStyle = {};\n    let pathBanner = '';\n    let pathArm = '';\n    let pathBody = '';\n    if (direction === 'left') {\n      pathBanner = 'M250 0L135 115h-15l-12 27L0 250V0z';\n      pathArm =\n        'M122 109c15-9 9-19 9-19-3-7-2-11-2-11 1-7-3-2-3-2-4 5-2 11-2 11 3 10-5 15-9 16';\n      pathBody =\n        'M135 115s-4 2-5 0l-14-14c-3-2-6-3-8-3 8-11 15-24-2-41-5-5-10-7-16-7-1-2-3-7-12-11 0 0-5 3-7 16-4 2-8 5-12 9s-7 8-9 12c-14 4-17 9-17 9 4 8 9 11 11 11 0 6 2 11 7 16 16 16 30 10 41 2 0 3 1 7 5 11l12 11c1 2-1 6-1 6z';\n      mainStyle.left = 0;\n      armStyle.WebkitTransformOrigin = '120px 144px';\n      armStyle.transformOrigin = '120px 144px';\n    } else {\n      pathBanner = 'M0 0l115 115h15l12 27 108 108V0z';\n      pathArm =\n        'M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16';\n      pathBody =\n        'M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z';\n      mainStyle.right = 0;\n      armStyle.WebkitTransformOrigin = '130px 106px';\n      armStyle.transformOrigin = '130px 106px';\n    }\n    return (\n      <a href={href} className=\"github-corner\" aria-label={ariaLabel}>\n        <svg\n          width={width}\n          height={height}\n          viewBox=\"0 0 250 250\"\n          style={mainStyle}\n        >\n          <path className=\"octo-banner\" d={pathBanner} fill={bannerColor} />\n          <path className=\"octo-arm\" d={pathArm} style={armStyle} />\n          <path className=\"octo-body\" d={pathBody} />\n        </svg>\n      </a>\n    );\n  }\n}\n"]}